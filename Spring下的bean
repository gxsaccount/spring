bean：可以复用的类。
bean规范：
必须是个公有(public)类
有无参构造函数
用公共方法暴露内部成员属性(getter,setter)


实现这样规范的类，被称为Java Bean。即是一种可重用的组件。
容器：一切Spring bean都存储在Spring容器内，并由其通过IoC技术管理。Spring容器也就是一个bean工厂（BeanFactory）。应用中bean的实例化，获取，销毁等都是
由这个bean工厂管理的。

Spring的应用上下文：Spring容器抽象的一种实现

Spring容器下的bean生命周期：
实例化-> 填充属性 -> 调用BeanNameAware的setBeanName() -> 调用BeanFactoryAware的setBeanFactory()方法 ->
调用ApplicationContextAware的setApplicationContext()方法 -> 调用BeanPostProcessor的预初始化方法 -> 
调用InitlizingBean的afterPropertiesSet()方法 -> 调用自定义的初始化方法 -> 调用BeanPostProcessor初始化方法
 -> 使用 -> 容器关闭 -> 调用DisposableBean的destroy()方法 -> 调用自定义的销毁方法
 
常用bean的装配：
XML显示装配
Java中显示装配（JavaConfig）（次建议）
隐式的bean发现机制和自动装配（建议）

自动化装配实现：
组件扫描：spring自动发现应用上下文中创建的bean（@Component）
自动装配：Spring自动满足bean之间依赖（@Autowired）

组件：
@Component注解将某个类注解为组件类。（如是类A）

配置类：配置上下文如何装配bean
@Configuration
@ComponentScan扫面组件，查找所有带@Component的类，自动为其创建bean，相当于上下文

被注入的类：
@ContextConfiguration(上下文类.class)
@Autowired使用在构造器，setter等各种方法上，自动注入。（将对应的bean注入）

0

 
